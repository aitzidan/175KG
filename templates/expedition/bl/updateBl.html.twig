{% extends 'base.html.twig' %}

{% block title %}Update BL{% endblock %}

{% block body %}
    <div class="container">
        <div class="page-inner">
            <div class="page-header">
                <h3 class="fw-bold mb-3">Éxpédition</h3>
                <ul class="breadcrumbs mb-3">
                    <li class="nav-home">
                        <a href="#">
                            <i class="icon-home"></i>
                        </a>
                    </li>
                    <li class="separator">
                        <i class="icon-arrow-right"></i>
                    </li>
                    <li class="nav-item">
                        <a href="#">Modifier une éxpédition</a>
                    </li>
                    <li class="separator">
                        <i class="icon-arrow-right"></i>
                    </li>
                    <li class="nav-item">
                        <a href="/bl/list">Éxpédition</a>
                    </li>
                </ul>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="card-title">Modifier une éxpédition</div>
                        </div>
                        <div class="card-body">
                            <form class="forms-sample col-md-12" id="form" enctype="multipart/form-data">
                                <h3 class='text-primary mt-4'>Description :</h3>
                                <div class="form-group row">
                                    <label class="col-sm-2 col-form-label">Numéro : <span style="color:red">*</span></label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="code" name="code" value="{{ bl.code }}">
                                    </div>
                                    <label class="col-sm-2 col-form-label">Date : <span style="color:red">*</span></label>
                                    <div class="col-sm-10">
                                        <input type="date" class="form-control" id="date" name="date" value="{{ bl.date|date('Y-m-d') }}">
                                    </div>
                                    <label class="col-sm-2 col-form-label">Entité : <span style="color:red">*</span></label>
                                    <div class="col-sm-10">
                                        <select class="form-control" id="entity" name="entity">
                                            <option value="">Sélectionner</option>
                                            {% for e in listEntity %}
                                                <option value="{{ e.id }}" {% if e.id == bl.entity.id %}selected{% endif %}>{{ e.entity }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>

                                <!-- Table for produit details -->
                                <div class='w-100 d-flex justify-content-between'>
                                    <h3 class='text-primary mt-4'>Détails bon livraison :</h3>
                                    <button type="button" class="btn btn-primary" id="addRow">Ajouter une ligne</button>
                                </div>

                                <div class="form-group row mt-4">
                                    <div class="col-sm-12">
                                        <table class="display table table-striped table-hover" id="produitTable">
                                            <thead>
                                                <tr>
                                                    <th>Code</th>
                                                    <th>Désignation</th>
                                                    <th>Quantité</th>
                                                    <th>Unité</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!-- Rows will be dynamically added here -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <div class="form-group " style="display:flex;justify-content: center;">
                                    <input type="submit" class="btn btn-success" value="Mettre à jour" id="btnUpdate">
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    $(document).ready(function() {
        getListProduit();
        {# getBlDetails(); #}

        $('#addRow').on('click', function() {
            addRow();
        });

        function getListProduit() {
            $.ajax({
                type: "GET",
                url: "/produit/listAjaxProduit",
                cache: false,
                success: function(data) {
                    if (data.codeStatut === "OK") {
                        window.produits = data.data; // Save products data globally

                        getBlDetails()
                    } else {
                        console.error(data.message);
                    }
                },
                error: function(err){
                    console.error("An error occurred:", err);
                }
            });
        }

        function getBlDetails() {
            const blId = "{{ id }}";
            $.ajax({
                type: "GET",
                url: `/bl/getDetailsBl/${blId}`,
                cache: false,
                success: function(data) {
                    if (data.codeStatut === "OK") {
                        populateForm(data.data);
                    } else {
                        console.error(data.message);
                    }
                },
                error: function(err){
                    console.error("An error occurred:", err);
                }
            });
        }

        function populateForm(blDetails) {
            const tbody = $('#produitTable tbody');
            tbody.empty(); // Clear existing rows

            blDetails.forEach(detail => {
                const row = $('<tr>');
                row.append(`
                    <td>
                        <select class="form-control product-code select2" name="idProduit[]" value="${detail.idProduit.id}">
                            <option value="">Sélectionner</option>
                            ${window.produits.map(p => `<option value="${p.id}" data-unite="${p.unite}" data-designation="${p.designation}" ${p.id == detail.idProduit.id ? 'selected' : ''}>${p.code}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <select class="form-control product-designation select2" name="designation[]">
                            <option value="">Sélectionner</option> 
                            ${window.produits.map(p => `<option value="${p.id}" data-unite="${p.unite}" data-code="${p.code}" ${p.id == detail.idProduit.id ? 'selected' : ''}>${p.produit}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <input type="number" class="form-control qte" name="qte[]" min="1" value="${detail.qte}">
                    </td>
                    <td>
                        <input type="text" class="form-control unite" name="unite[]" value="${detail.idProduit.unite}" readonly>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger remove-row">Supprimer</button>
                    </td>
                `);
                tbody.append(row);

                // Initialize select2
                row.find('.select2').select2();

                // Attach event handlers
                attachRowEvents(row);
            });

            updateDisabledOptions(); // Update the disabled options after populating the form
        }

        function attachRowEvents(row) {
            let isUpdating = false;

            function updateDisabledOptions() {
                const selectedIds = [];
                $('#produitTable tbody').find('.product-code').each(function() {
                    const selectedValue = $(this).val();
                    if (selectedValue) {
                        selectedIds.push(selectedValue);
                    }
                });

                $('#produitTable tbody').find('.product-code, .product-designation').each(function() {
                    const select = $(this);
                    select.find('option').each(function() {
                        const option = $(this);
                        if (selectedIds.includes(option.val())) {
                            if (option.val() !== select.val()) {
                                option.prop('disabled', true);
                            }
                        } else {
                            option.prop('disabled', false);
                        }
                    });
                });
            }

            row.find('.product-code').on('change', function() {
                if (isUpdating) return;
                isUpdating = true;

                const selectedOption = $(this).find('option:selected');
                const designation = selectedOption.data('designation');
                const unite = selectedOption.data('unite');

                const designationSelect = $(this).closest('tr').find('.product-designation');
                designationSelect.val(selectedOption.val()).trigger('change');

                $(this).closest('tr').find('.unite').val(unite);

                updateDisabledOptions();
                isUpdating = false;
            });

            row.find('.product-designation').on('change', function() {
                if (isUpdating) return;
                isUpdating = true;

                const selectedOption = $(this).find('option:selected');
                const code = selectedOption.data('code');
                const unite = selectedOption.data('unite');

                const codeSelect = $(this).closest('tr').find('.product-code');
                codeSelect.val(selectedOption.val()).trigger('change');

                $(this).closest('tr').find('.unite').val(unite);

                updateDisabledOptions();
                isUpdating = false;
            });

            row.find('.remove-row').on('click', function() {
                $(this).closest('tr').remove();
                updateDisabledOptions();
            });
        }

        function addRow() {
            const tbody = $('#produitTable tbody');

            let allFilled = true;
            tbody.find('select').each(function() {
                if ($(this).val() === "") {
                    allFilled = false;
                    return false;
                }
            });

            if (!allFilled) {
                alert("Vous devez remplir tous les champs de la ligne existante avant d'ajouter une nouvelle ligne.");
                return;
            }

            const row = $('<tr>');
            row.append(`
                <td>
                    <select class="form-control product-code select2" name="idProduit[]">
                        <option value="">Sélectionner</option>
                        ${window.produits.map(p => `<option value="${p.id}" data-unite="${p.unite}" data-designation="${p.designation}">${p.code}</option>`).join('')}
                    </select>
                </td>
                <td>
                    <select class="form-control product-designation select2" name="designation[]">
                        <option value="">Sélectionner</option>
                        ${window.produits.map(p => `<option value="${p.id}" data-unite="${p.unite}" data-code="${p.code}">${p.produit}</option>`).join('')}
                    </select>
                </td>
                <td>
                    <input type="number" class="form-control qte" name="qte[]" min="1">
                </td>
                <td>
                    <input type="text" class="form-control unite" name="unite[]" readonly>
                </td>
                <td>
                    <button type="button" class="btn btn-danger remove-row">Supprimer</button>
                </td>
            `);
            tbody.append(row);

            // Initialize select2
            row.find('.select2').select2();

            // Attach event handlers
            attachRowEvents(row);
        }
    });

    document.getElementById('form').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission
        {# $('#btnUpdate').css('disabled', true); #}

        var formData = new FormData(this);

        var  id = "{{id}}"
        var formData = new FormData(this);

        $.ajax({
            type: "POST",
            url: "/bl/ajaxUpdateBl/"+id,
            data: formData,
            cache: false,
            processData: false,
            contentType: false,
            success: function(data) {
                console.log('OK');
                if (data.codeStatut == "OK") {
                    window.location = '/bl/list';
                } else {
                    $('#btnUpdate').css('display', 'block');
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur',
                        text: data.message,
                    });
                }

                {# $('#btnUpdate').css('disabled', false); #}

            },
            error: function(err){
                $('#btnUpdate').css('display', 'block');
                Swal.fire({
                    icon: 'error',
                    title: 'Erreur',
                    text: "Une erreur s'est produite ! ",
                });
            }
        });
    });
</script>
{% endblock %}
